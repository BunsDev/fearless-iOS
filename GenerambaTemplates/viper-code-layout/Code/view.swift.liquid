import UIKit
import SoraFoundation

final class {{ module_info.name }}ViewController: UIViewController, ViewHolder {
    typealias RootViewType = {{ module_info.name }}ViewLayout

    // MARK: Private properties
    private let presenter: {{ module_info.name }}PresenterProtocol

    // MARK: - Constructor
    init(
        presenter: {{ module_info.name }}PresenterProtocol,
        localizationManager: LocalizationManagerProtocol?
    ) {
        self.presenter = presenter
        super.init(nibName: nil, bundle: nil)
        self.localizationManager = localizationManager
    }

    @available(*, unavailable)
    required init?(coder _: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }

    // MARK: - Life cycle
    override func loadView() {
        view = {{ module_info.name }}ViewLayout()
    }

    override func viewDidLoad() {
        super.viewDidLoad()
        presenter.didLoad(view: self)
    }
    
    // MARK: - Private methods
}

// MARK: - {{ module_info.name }}ViewProtocol
extension {{ module_info.name }}ViewController: {{ module_info.name }}ViewProtocol {}

// MARK: - Localizable
extension {{ module_info.name }}ViewController: Localizable {
    func applyLocalization() {}
}
